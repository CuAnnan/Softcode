@create zobj=10
&CON.PARENT.VAMPIRE zobj=#992
&CMD.FEED zobj=$+feed:@assert [not(comp(parent(setr(0,%#)), v(con.parent.vampire)))]={@sudo %l=@pemit %q0=You are not a vampire};@emit [lzone(%l)]
&CMD.FEED.SECURITY zobj=$+feed/security:@assert [not(comp(parent(setr(0,%#)), v(con.parent.vampire)))]={@sudo %l=@pemit %q0=You are not a vampire};@sudo setr(1,%l)=@pemit %q0=The security for [name(%q1)] is [u(%q1/var.security)]
&VAR.TEST zobj=test
@Desc zobj=This is a test
&CON.DOMAIN.LISTS zobj=#429
&CMD.DOMAIN.CLAIM zobj=$+domain/claim:@assert [u(fnc.domain.unowned, %#, %l)]={@sudo %l=@pemit [r(user)]=This zone is already claimed as domain.};@set [r(ledger)]=[r(prefix)].owner:[r(user)];@set [r(ledger)]=[setr(baseprefix,index(r(prefix),.,1,2))]:[setunion(u([r(ledger)]/[r(baseprefix)]), parent(r(user)))];@set [r(ledger)]=[r(prefix)].members:[r(user)];@sudo %l=@pemit [r(user)]=You have claimed [name(%#)].
&CMD.DOMAIN.CLEAR zobj=$+domain/clear *:[setq(1, %#)];@set [u(con.domain.lists)]=domain.[u(con.parent.[setr(0, %0)])].%l.owner:;@sudo %l=@pemit %q1=You have forcibly reset the %q0 domain in this room.
&CMD.DOMAIN.REVOKE zobj=$+domain/revoke:[setr(0, %#)];@include me/inc.domain.own=%q0,setr(3,%l);[pushregs(0)];@dolist [lattr([r(ledger)]/[r(prefix)]*)]=@set [r(ledger)]=##:;@sudo %q3=@pemit %q0=You have revoked your claim to [name(%q3)]
&CMD.DOMAIN.ADD zobj=$+domain/add *:@include me/inc.domain.own=[setr(user, %#)],%l;[pushregs(0)];@set [r(ledger)]=[r(prefix)].members:[setunion(u([r(ledger)]/[r(prefix)].members), parse(%0,num(*##),%,))];@sudo %l=@pemit [r(user)]=Added %0 to the domain.
&INC.DOMAIN.OWN zobj=@assert [not(comp(u([setr(ledger,u(con.domain.lists))]/[setr(prefix,domain.%1.[parent(%0)]).owner]), %0))]={@sudo %1=@pemit %0=You do not hold domain here.};[pushregs(1)]
&CMD.DOMAIN.REMOVE zobj=$+domain/remove *:@include me/inc.domain.own=[setr(user, %#)],%l;[pushregs(0)];@set [r(ledger)]=[r(prefix)].members:[setdiff(u([r(ledger)]/[r(prefix)].members), parse(%0,num(*##),%,))];@sudo %l=@pemit [r(user)]=Removed %0 from the domain.
&CMD.DOMAIN.SETSTATS zobj=$+domain/set *=*:@include me/inc.domain.own=[setr(user, %#)],%l;[pushregs(0)];@assert [member(security rating, setr(key,trim(%0)))]={@sudo %l=@pemit [r(user)]=%0 is not a domain setting.;};@set [r(ledger)]=[r(prefix)].[r(key)]:[floor(%1)];@sudo %l=@pemit [r(user)]=Set domain [r(key)] to %1
&FNC.DOMAIN.UNOWNED zobj=[not(u(setr(fullpath,setr(ledger,u(con.domain.lists))/[setr(prefix,domain.[%1].[parent(setr(user, %0))])]).owner))][pushregs(1)]%r
&CMD.TEST zobj=$+test:[u(fnc.domain.unowned, %#, %l)];@sudo %l=@pemit [r(user)]=index(r(prefix),.,1,2)
&CMD.DOMAIN.SENSE zobj=$+domain/check:[setr(isunclaimed, u(fnc.domain.unowned, %#, %l))];@sudo %l=@pemit [r(user)]=This area is [if(r(isunclaimed),un)]claimed.
&CMD.DOMAIN.WHO zobj=$+domain/who:@if [u(fnc.domain.unowned, %#, %l)]={@sudo %l=@pemit [r(user)]=This zone is unclaimed},{@sudo %l=@pemit [r(user)]=This zone is already claimed by [name(u([r(ledger)]/[r(prefix)].owner))].}
&CMD.DOMAIN.REPORT zobj=$+domain/report:@assert [not(u(fnc.domain.unowned, %#, %l))]=@sudo %l=@pemit [r(user)]=This domain is unclaimed
&CMD.DOMAIN.DETAILS zobj=$+domain/details:@assert [not(u(fnc.domain.unowned, %#, %l))]=@sudo %l=@pemit [r(user)]=This domain is unclaimed;@assert [member(u([r(ledger)]/[r(prefix)].members), r(user))]=@sudo %l=@pemit [r(user)]=You are not a member of this domain.;[setr(reportText, u(fnc.domain.spherereport))];@sudo %l=@pemit [r(user)]=Report:%r[r(reportText)];
&FNC.DOMAIN.SPHEREREPORT zobj=Owner:[name(u([r(fullpath)].owner))]%rMembers: [parse(u(r(fullpath).members), name(##), ,%,%b)][if(setr(security, u([r(fullpath)].security)),%rSecurity: [r(security)])][if(setr(rating, u([r(fullpath)].rating)),%rRating: [r(rating)])]
@rxlevel zobj=Real
@txlevel zobj=Real Admin Chimera Wraith
@set zobj=ZONEPARENT ZONECONTENTS SAFE ZONEMASTER
