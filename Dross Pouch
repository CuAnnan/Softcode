@create Dross Pouch Master=10
@lock Dross Pouch Master=+DROSSPOUCH:yes|*Conn
&DROSSPOUCH Dross Pouch Master=yes
&CON.PARENT Dross Pouch Master=#10781
&CMD.PAY Dross Pouch Master=$+pay */*:@assert [isnum(%1)]=@pemit %#=%1 is not a number.;@assert [lt(0, %1)]=@pemit %#=You can't pay someone a negative number, you thief.;@assert [gte(get(setr(0,v(con.parent))/dross.%#),[setr(1,ifelse(%1,%1,1))])]=@pemit %#=You do not have enough Dross on hand to pay %0 %q1 Dross.;@set %q0=dross.[setr(2, num(*%0))]:[add(get(%q0/dross.%q2),%q1)];@set %q0=dross.%#:[sub(get(%q0/dross.%#),%q1)];@pemit *%#=Paid %0 %q1 Dross;@pemit *%0=%n gave you %1 dross from their personal stash.
&CMD.BALANCE Dross Pouch Master=$+balance:@assert [or(setr(0,get(setr(1,v(con.parent))/balance.%#)), setr(2, get(%q1/dross.%#)))]=@pemit %#=You have no Dross;@pemit %#=You have [%q0] Dross stashed safely and [ifelse(%q2,%q2,0)] on hand.
&CMD.TOPUP Dross Pouch Master=$+topup */*=*:@assert [isnum(%1)]=@pemit %#=%1 is not a number.;@set [setr(0,v(con.parent))]=[setr(1,balance.[setr(2,num(*%0))])]:[add(get(%q0/%q1),%1)];@pemit %#=Topped up %0's account by %1 for %2;@pemit *%0=name(%#) topped up your account by %1 with the reason %2;@set %q0=topups.%q2:[setr(3, add(get(%q0/topups.%q2),1))];@set %q0=topups.%q2.%#.%q3:%#|%1|%2|[time()]
&CMD.BURN Dross Pouch Master=$+burn *:@assert [gte(setr(2,get([setr(0,v(con.parent))]/[setr(1,dross.[%#])])),%0)]=@pemit %#=You don't have %0 Dross on hand to burn.;@set %q0=%q1:[setr(3,sub(%q2,%0))];@pemit %#=You burn %0 Dross. You have %q3 remaining.
@Desc Dross Pouch Master=Conn's Dross %xhUNOFFICIAL%xn Pouch system.%r%xh+pay <player>/<amount>%xn%t%t%t%t%tgives <player> <amount> dross from your account%r%xh+balance%xn%t%t%t%t%tshows your balance%r%xh+topup <player>/<amount>=<reason>%xn%t%t%t%t%tThis command tops up <player>'s account by <amount> for <reason>. The player topping up, the player topped up, the reason, amount and time of topup are all logged.%r%xh+burn <amount>%xn%t%t%t%t%tBurns dross for a Cantrip, reducing your balance by <amount>.%r%rIt is the intention that the +burn command will faepose that you have done so, as it should be immediately obvious to everyone who has fae sight that that's what is going on. The code for it is currently beyond me.
&CMD.REPORT Dross Pouch Master=$+topup/report *:@assert [setr(0, num(*%0))]=%0 not found.;@pemit %#=Topups that %0 has received:%r[iter(lattr(me/topups.%q0.*), iter(get(me/##),itext(0),|,%t), ,%r)]%r==============================%rTopups that %0 has provided:%r[iter(lattr(me/topups.*.%q0.*), [name(index(##,.,2,1))]%t[iter(get(me/##),itext(0),|,%t)], ,%r)];
&TOPUPS.#19140.#19049.1 Dross Pouch Master=#19049|19|Tabin's zany adventures|Tue May 04 11:16:04 2021
&CMD.WITHDRAW Dross Pouch Master=$+withdraw *:=@assert [isnum(%0)]=@pemit %#=%1 is not a number.;@assert [lt(0, %0)]=@pemit %#=You can't pay withdraw a negative number.;@assert [gte(setr(1, get(setr(0, v(con.parent))/balance.%#)), %0)]=You do not have sufficient dross stashed to withdraw %0;@pemit %#=You withdraw %0 dross.;@set %q0=balance.%#:[sub(%q1, %0)];@set %q0=dross.%#:[add(%0, get(%q0/dross.%#))]
&CMD.DEPOSIT Dross Pouch Master=$+deposit *:@assert [isnum(%0)]=@pemit %#=%1 is not a number.;@assert [lt(0, %0)]=@pemit %#=You can't pay deposit a negative number.;@assert [gte(setr(1, get(setr(0, v(con.parent))/dross.%#)), %0)]=You do not have enough dross on hand to deposit %0;@pemit %#=You deposit %0 dross;@set %q0=balance.%#:[add(get(%q0/balance.%#),%0)];@set %q0=dross.%#:[sub(%q1,%0)]
@set Dross Pouch Master=PARENT_OK
